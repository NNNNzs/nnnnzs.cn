# This is a basic workflow to help you get started with Actions

name: restart-pm2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: echo env
        run: |
          echo ${{env}}}
          echo ${{ env.ALGOLIA_API_KEY }}

      - name: Set up Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: "16"

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install pnpm
        run: npm install pnpm -g

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: build
        run: pnpm run build

      - name: 部署到远端服务器
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.KEY }}
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          source: .output
          target: ${{secrets.PATH}}/.output

      - name: restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          port: ${{secrets.PORT}}
          script: |
            cd ${{secrets.PATH}}
            git pull -f
            pnpm install 
            pnpm run pm2
            pm2 list
      - name: notice
        run: curl ${{secrets.CURL_CMD}}
